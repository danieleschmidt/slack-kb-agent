global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'slack-kb-agent'
    environment: 'production'

rule_files:
  - "alert_rules.yml"
  - "recording_rules.yml"

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

scrape_configs:
  # Slack KB Agent main application
  - job_name: 'slack-kb-agent'
    static_configs:
      - targets: ['slack-kb-agent:9090']
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s
    params:
      format: ['prometheus']
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: slack-kb-agent:9090

  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s

  # PostgreSQL metrics
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    metrics_path: '/metrics'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'postgres-database'

  # Redis metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    metrics_path: '/metrics'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'redis-cache'

  # System metrics (Node Exporter)
  - job_name: 'node'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 30s
    metrics_path: '/metrics'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        replacement: 'system-host'

  # Container metrics (cAdvisor)
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: '/metrics'

  # Blackbox exporter for external service monitoring
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]  # Look for a HTTP 200 response
    static_configs:
      - targets:
        - http://slack-kb-agent:9090/health
        - https://api.slack.com/api/api.test
        - https://api.openai.com/v1/models
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Slack KB Agent specific endpoints
  - job_name: 'slack-kb-health'
    static_configs:
      - targets: ['slack-kb-agent:9090']
    metrics_path: '/health'
    scrape_interval: 10s
    scrape_timeout: 5s

  # Custom business metrics
  - job_name: 'slack-kb-business'
    static_configs:
      - targets: ['slack-kb-agent:9090']
    metrics_path: '/business-metrics'
    scrape_interval: 60s
    scrape_timeout: 10s

  # Alert Manager metrics
  - job_name: 'alertmanager'
    static_configs:
      - targets: ['alertmanager:9093']
    scrape_interval: 30s

  # Grafana metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    metrics_path: '/metrics'
    scrape_interval: 30s

# Remote write configuration (for long-term storage)
# remote_write:
#   - url: "https://prometheus.example.com/api/v1/write"
#     basic_auth:
#       username: "prometheus"
#       password: "password"

# Remote read configuration
# remote_read:
#   - url: "https://prometheus.example.com/api/v1/read"
#     basic_auth:
#       username: "prometheus"
#       password: "password"